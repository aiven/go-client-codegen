// Code generated by Aiven. DO NOT EDIT.

package accountauthentication

import (
	"context"
	"encoding/json"
	"fmt"
	"net/url"
	"time"
)

type Handler interface {
	// AccountAuthenticationMethodCreate create a new authentication method
	// POST /v1/account/{account_id}/authentication
	// https://api.aiven.io/doc/#tag/Account/operation/AccountAuthenticationMethodCreate
	AccountAuthenticationMethodCreate(ctx context.Context, accountId string, in *AccountAuthenticationMethodCreateIn) (*AccountAuthenticationMethodCreateOut, error)

	// AccountAuthenticationMethodDelete delete authentication method
	// DELETE /v1/account/{account_id}/authentication/{account_authentication_method_id}
	// https://api.aiven.io/doc/#tag/Account/operation/AccountAuthenticationMethodDelete
	AccountAuthenticationMethodDelete(ctx context.Context, accountId string, accountAuthenticationMethodId string) error

	// AccountAuthenticationMethodGet get details of a single authentication method
	// GET /v1/account/{account_id}/authentication/{account_authentication_method_id}
	// https://api.aiven.io/doc/#tag/Account/operation/AccountAuthenticationMethodGet
	AccountAuthenticationMethodGet(ctx context.Context, accountId string, accountAuthenticationMethodId string) (*AccountAuthenticationMethodGetOut, error)

	// AccountAuthenticationMethodUpdate update authentication method
	// PUT /v1/account/{account_id}/authentication/{account_authentication_method_id}
	// https://api.aiven.io/doc/#tag/Account/operation/AccountAuthenticationMethodUpdate
	AccountAuthenticationMethodUpdate(ctx context.Context, accountId string, accountAuthenticationMethodId string, in *AccountAuthenticationMethodUpdateIn) (*AccountAuthenticationMethodUpdateOut, error)

	// AccountAuthenticationMethodsList list authentication methods
	// GET /v1/account/{account_id}/authentication
	// https://api.aiven.io/doc/#tag/Account/operation/AccountAuthenticationMethodsList
	AccountAuthenticationMethodsList(ctx context.Context, accountId string) ([]AuthenticationMethodOut, error)
}

// doer http client
type doer interface {
	Do(ctx context.Context, operationID, method, path string, in any, query ...[2]string) ([]byte, error)
}

func NewHandler(doer doer) AccountAuthenticationHandler {
	return AccountAuthenticationHandler{doer}
}

type AccountAuthenticationHandler struct {
	doer doer
}

func (h *AccountAuthenticationHandler) AccountAuthenticationMethodCreate(ctx context.Context, accountId string, in *AccountAuthenticationMethodCreateIn) (*AccountAuthenticationMethodCreateOut, error) {
	path := fmt.Sprintf("/v1/account/%s/authentication", url.PathEscape(accountId))
	b, err := h.doer.Do(ctx, "AccountAuthenticationMethodCreate", "POST", path, in)
	if err != nil {
		return nil, err
	}
	out := new(accountAuthenticationMethodCreateOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return &out.AuthenticationMethod, nil
}
func (h *AccountAuthenticationHandler) AccountAuthenticationMethodDelete(ctx context.Context, accountId string, accountAuthenticationMethodId string) error {
	path := fmt.Sprintf("/v1/account/%s/authentication/%s", url.PathEscape(accountId), url.PathEscape(accountAuthenticationMethodId))
	_, err := h.doer.Do(ctx, "AccountAuthenticationMethodDelete", "DELETE", path, nil)
	return err
}
func (h *AccountAuthenticationHandler) AccountAuthenticationMethodGet(ctx context.Context, accountId string, accountAuthenticationMethodId string) (*AccountAuthenticationMethodGetOut, error) {
	path := fmt.Sprintf("/v1/account/%s/authentication/%s", url.PathEscape(accountId), url.PathEscape(accountAuthenticationMethodId))
	b, err := h.doer.Do(ctx, "AccountAuthenticationMethodGet", "GET", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(accountAuthenticationMethodGetOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return &out.AuthenticationMethod, nil
}
func (h *AccountAuthenticationHandler) AccountAuthenticationMethodUpdate(ctx context.Context, accountId string, accountAuthenticationMethodId string, in *AccountAuthenticationMethodUpdateIn) (*AccountAuthenticationMethodUpdateOut, error) {
	path := fmt.Sprintf("/v1/account/%s/authentication/%s", url.PathEscape(accountId), url.PathEscape(accountAuthenticationMethodId))
	b, err := h.doer.Do(ctx, "AccountAuthenticationMethodUpdate", "PUT", path, in)
	if err != nil {
		return nil, err
	}
	out := new(accountAuthenticationMethodUpdateOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return &out.AuthenticationMethod, nil
}
func (h *AccountAuthenticationHandler) AccountAuthenticationMethodsList(ctx context.Context, accountId string) ([]AuthenticationMethodOut, error) {
	path := fmt.Sprintf("/v1/account/%s/authentication", url.PathEscape(accountId))
	b, err := h.doer.Do(ctx, "AccountAuthenticationMethodsList", "GET", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(accountAuthenticationMethodsListOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out.AuthenticationMethods, nil
}

// AccountAuthenticationMethodCreateIn AccountAuthenticationMethodCreateRequestBody
type AccountAuthenticationMethodCreateIn struct {
	AuthTokenExtendWhenUsed          *bool                      `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                       `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodName         string                     `json:"authentication_method_name"`                     // Authentication Method Name
	AuthenticationMethodType         AuthenticationMethodType   `json:"authentication_method_type"`                     // Authentication method type
	AutoJoinTeamId                   *string                    `json:"auto_join_team_id,omitempty"`                    // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              *string                    `json:"auto_join_user_group_id,omitempty"`              // Automatically add users to a group, when user signs up using this authentication method
	LinkedDomains                    *[]LinkedDomainIn          `json:"linked_domains,omitempty"`                       // Linked Domains
	SamlAssertionSignedEnabled       *bool                      `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                      `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCertificate                  *string                    `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlDigestAlgorithm              SamlDigestAlgorithmType    `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                    `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingIn        `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                      `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                    `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlRequestedAuthnContextEnabled *bool                      `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlVariant                      SamlVariantType            `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                      `json:"scim_enabled,omitempty"`                         // SCIM enabled
}

// AccountAuthenticationMethodCreateOut AuthenticationMethod
type AccountAuthenticationMethodCreateOut struct {
	AccountId                        string                        `json:"account_id"`                                     // Account ID
	AuthTokenExtendWhenUsed          *bool                         `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                          `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodEnabled      bool                          `json:"authentication_method_enabled"`                  // If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in
	AuthenticationMethodId           string                        `json:"authentication_method_id"`                       // Authentication Method ID
	AuthenticationMethodName         *string                       `json:"authentication_method_name,omitempty"`           // Authentication Method Name
	AuthenticationMethodType         AuthenticationMethodType      `json:"authentication_method_type"`                     // Authentication method type
	AutoJoinTeamId                   string                        `json:"auto_join_team_id"`                              // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              string                        `json:"auto_join_user_group_id"`                        // Automatically add users to a group, when user signs up using this authentication method
	CreateTime                       time.Time                     `json:"create_time"`                                    // Create Time
	DeleteTime                       time.Time                     `json:"delete_time"`                                    // Delete Time
	OrganizationId                   *string                       `json:"organization_id,omitempty"`                      // Organization ID
	SamlAcsUrl                       *string                       `json:"saml_acs_url,omitempty"`                         // Saml Acs Url
	SamlAssertionSignedEnabled       *bool                         `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                         `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCert                         SamlCertType                  `json:"saml_cert,omitempty"`                            // SAMLVariant
	SamlCertificate                  *string                       `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlCertificateIssuer            *string                       `json:"saml_certificate_issuer,omitempty"`              // Saml Certificate Issuer
	SamlCertificateNotValidAfter     *string                       `json:"saml_certificate_not_valid_after,omitempty"`     // Saml Certificate Not Valid After
	SamlCertificateNotValidBefore    *string                       `json:"saml_certificate_not_valid_before,omitempty"`    // Saml Certificate Not Valid Before
	SamlCertificateSubject           *string                       `json:"saml_certificate_subject,omitempty"`             // Saml Certificate Subject
	SamlDigestAlgorithm              SamlDigestAlgorithmType       `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                       `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingOut          `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                         `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                       `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlMetadataUrl                  *string                       `json:"saml_metadata_url,omitempty"`                    // Saml Metadata Url
	SamlRequestedAuthnContextEnabled *bool                         `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType    `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlSpCertificate                *string                       `json:"saml_sp_certificate,omitempty"`                  // Saml Sp Certificate
	SamlVariant                      SamlVariantType               `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                         `json:"scim_enabled,omitempty"`                         // SCIM API enabled
	ScimUrl                          *string                       `json:"scim_url,omitempty"`                             // Scim Url
	State                            AuthenticationMethodStateType `json:"state"`                                          // AuthenticationMethodState
	UpdateTime                       time.Time                     `json:"update_time"`                                    // Update Time
}

// AccountAuthenticationMethodGetOut AuthenticationMethod
type AccountAuthenticationMethodGetOut struct {
	AccountId                        string                        `json:"account_id"`                                     // Account ID
	AuthTokenExtendWhenUsed          *bool                         `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                          `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodEnabled      bool                          `json:"authentication_method_enabled"`                  // If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in
	AuthenticationMethodId           string                        `json:"authentication_method_id"`                       // Authentication Method ID
	AuthenticationMethodName         *string                       `json:"authentication_method_name,omitempty"`           // Authentication Method Name
	AuthenticationMethodType         AuthenticationMethodType      `json:"authentication_method_type"`                     // Authentication method type
	AutoJoinTeamId                   string                        `json:"auto_join_team_id"`                              // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              string                        `json:"auto_join_user_group_id"`                        // Automatically add users to a group, when user signs up using this authentication method
	CreateTime                       time.Time                     `json:"create_time"`                                    // Create Time
	DeleteTime                       time.Time                     `json:"delete_time"`                                    // Delete Time
	OrganizationId                   *string                       `json:"organization_id,omitempty"`                      // Organization ID
	SamlAcsUrl                       *string                       `json:"saml_acs_url,omitempty"`                         // Saml Acs Url
	SamlAssertionSignedEnabled       *bool                         `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                         `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCert                         SamlCertType                  `json:"saml_cert,omitempty"`                            // SAMLVariant
	SamlCertificate                  *string                       `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlCertificateIssuer            *string                       `json:"saml_certificate_issuer,omitempty"`              // Saml Certificate Issuer
	SamlCertificateNotValidAfter     *string                       `json:"saml_certificate_not_valid_after,omitempty"`     // Saml Certificate Not Valid After
	SamlCertificateNotValidBefore    *string                       `json:"saml_certificate_not_valid_before,omitempty"`    // Saml Certificate Not Valid Before
	SamlCertificateSubject           *string                       `json:"saml_certificate_subject,omitempty"`             // Saml Certificate Subject
	SamlDigestAlgorithm              SamlDigestAlgorithmType       `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                       `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingOut          `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                         `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                       `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlMetadataUrl                  *string                       `json:"saml_metadata_url,omitempty"`                    // Saml Metadata Url
	SamlRequestedAuthnContextEnabled *bool                         `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType    `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlSpCertificate                *string                       `json:"saml_sp_certificate,omitempty"`                  // Saml Sp Certificate
	SamlVariant                      SamlVariantType               `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                         `json:"scim_enabled,omitempty"`                         // SCIM API enabled
	ScimUrl                          *string                       `json:"scim_url,omitempty"`                             // Scim Url
	State                            AuthenticationMethodStateType `json:"state"`                                          // AuthenticationMethodState
	UpdateTime                       time.Time                     `json:"update_time"`                                    // Update Time
}

// AccountAuthenticationMethodUpdateIn AccountAuthenticationMethodUpdateRequestBody
type AccountAuthenticationMethodUpdateIn struct {
	AuthTokenExtendWhenUsed          *bool                      `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                       `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodEnabled      *bool                      `json:"authentication_method_enabled,omitempty"`        // If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in
	AuthenticationMethodName         *string                    `json:"authentication_method_name,omitempty"`           // Authentication Method Name
	AutoJoinTeamId                   *string                    `json:"auto_join_team_id,omitempty"`                    // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              *string                    `json:"auto_join_user_group_id,omitempty"`              // Automatically add users to a group, when user signs up using this authentication method
	SamlAssertionSignedEnabled       *bool                      `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                      `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCertificate                  *string                    `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlDigestAlgorithm              SamlDigestAlgorithmType    `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                    `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingIn        `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                      `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                    `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlRequestedAuthnContextEnabled *bool                      `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlVariant                      SamlVariantType            `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                      `json:"scim_enabled,omitempty"`                         // SCIM enabled
}

// AccountAuthenticationMethodUpdateOut AuthenticationMethod
type AccountAuthenticationMethodUpdateOut struct {
	AccountId                        string                        `json:"account_id"`                                     // Account ID
	AuthTokenExtendWhenUsed          *bool                         `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                          `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodEnabled      bool                          `json:"authentication_method_enabled"`                  // If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in
	AuthenticationMethodId           string                        `json:"authentication_method_id"`                       // Authentication Method ID
	AuthenticationMethodName         *string                       `json:"authentication_method_name,omitempty"`           // Authentication Method Name
	AuthenticationMethodType         AuthenticationMethodType      `json:"authentication_method_type"`                     // Authentication method type
	AutoJoinTeamId                   string                        `json:"auto_join_team_id"`                              // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              string                        `json:"auto_join_user_group_id"`                        // Automatically add users to a group, when user signs up using this authentication method
	CreateTime                       time.Time                     `json:"create_time"`                                    // Create Time
	DeleteTime                       time.Time                     `json:"delete_time"`                                    // Delete Time
	OrganizationId                   *string                       `json:"organization_id,omitempty"`                      // Organization ID
	SamlAcsUrl                       *string                       `json:"saml_acs_url,omitempty"`                         // Saml Acs Url
	SamlAssertionSignedEnabled       *bool                         `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                         `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCert                         SamlCertType                  `json:"saml_cert,omitempty"`                            // SAMLVariant
	SamlCertificate                  *string                       `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlCertificateIssuer            *string                       `json:"saml_certificate_issuer,omitempty"`              // Saml Certificate Issuer
	SamlCertificateNotValidAfter     *string                       `json:"saml_certificate_not_valid_after,omitempty"`     // Saml Certificate Not Valid After
	SamlCertificateNotValidBefore    *string                       `json:"saml_certificate_not_valid_before,omitempty"`    // Saml Certificate Not Valid Before
	SamlCertificateSubject           *string                       `json:"saml_certificate_subject,omitempty"`             // Saml Certificate Subject
	SamlDigestAlgorithm              SamlDigestAlgorithmType       `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                       `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingOut          `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                         `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                       `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlMetadataUrl                  *string                       `json:"saml_metadata_url,omitempty"`                    // Saml Metadata Url
	SamlRequestedAuthnContextEnabled *bool                         `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType    `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlSpCertificate                *string                       `json:"saml_sp_certificate,omitempty"`                  // Saml Sp Certificate
	SamlVariant                      SamlVariantType               `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                         `json:"scim_enabled,omitempty"`                         // SCIM API enabled
	ScimUrl                          *string                       `json:"scim_url,omitempty"`                             // Scim Url
	State                            AuthenticationMethodStateType `json:"state"`                                          // AuthenticationMethodState
	UpdateTime                       time.Time                     `json:"update_time"`                                    // Update Time
}
type AuthenticationMethodOut struct {
	AccountId                        string                        `json:"account_id"`                                     // Account ID
	AuthTokenExtendWhenUsed          *bool                         `json:"auth_token_extend_when_used,omitempty"`          // Extend authentication token validity when used
	AuthTokenMaxAgeSeconds           *int                          `json:"auth_token_max_age_seconds,omitempty"`           // Auth Token Max Age Seconds
	AuthenticationMethodEnabled      bool                          `json:"authentication_method_enabled"`                  // If true, authentication method can be used to access account/projects in account. If false, authentication method can still be used to sign in
	AuthenticationMethodId           string                        `json:"authentication_method_id"`                       // Authentication Method ID
	AuthenticationMethodName         *string                       `json:"authentication_method_name,omitempty"`           // Authentication Method Name
	AuthenticationMethodType         AuthenticationMethodType      `json:"authentication_method_type"`                     // Authentication method type
	AutoJoinTeamId                   string                        `json:"auto_join_team_id"`                              // Automatically add users to a team, when user signs up using this authentication method
	AutoJoinUserGroupId              string                        `json:"auto_join_user_group_id"`                        // Automatically add users to a group, when user signs up using this authentication method
	CreateTime                       time.Time                     `json:"create_time"`                                    // Create Time
	DeleteTime                       time.Time                     `json:"delete_time"`                                    // Delete Time
	OrganizationId                   *string                       `json:"organization_id,omitempty"`                      // Organization ID
	SamlAcsUrl                       *string                       `json:"saml_acs_url,omitempty"`                         // Saml Acs Url
	SamlAssertionSignedEnabled       *bool                         `json:"saml_assertion_signed_enabled,omitempty"`        // Set to 'true' to enable WantAssertionsSigned
	SamlAuthnRequestsSignedEnabled   *bool                         `json:"saml_authn_requests_signed_enabled,omitempty"`   // Set to 'true' to enable AuthnRequestsSigned
	SamlCert                         SamlCertType                  `json:"saml_cert,omitempty"`                            // SAMLVariant
	SamlCertificate                  *string                       `json:"saml_certificate,omitempty"`                     // Identity provider's certificate
	SamlCertificateIssuer            *string                       `json:"saml_certificate_issuer,omitempty"`              // Saml Certificate Issuer
	SamlCertificateNotValidAfter     *string                       `json:"saml_certificate_not_valid_after,omitempty"`     // Saml Certificate Not Valid After
	SamlCertificateNotValidBefore    *string                       `json:"saml_certificate_not_valid_before,omitempty"`    // Saml Certificate Not Valid Before
	SamlCertificateSubject           *string                       `json:"saml_certificate_subject,omitempty"`             // Saml Certificate Subject
	SamlDigestAlgorithm              SamlDigestAlgorithmType       `json:"saml_digest_algorithm,omitempty"`                // Digest algorithm. This is an advanced option that typically does not need to be set.
	SamlEntityId                     *string                       `json:"saml_entity_id,omitempty"`                       // Saml Entity ID
	SamlFieldMapping                 *SamlFieldMappingOut          `json:"saml_field_mapping,omitempty"`                   // SAMLFieldMapping
	SamlIdpLoginAllowed              *bool                         `json:"saml_idp_login_allowed,omitempty"`               // Set to 'true' to enable IdP initiated login
	SamlIdpUrl                       *string                       `json:"saml_idp_url,omitempty"`                         // Saml Idp Url
	SamlMetadataUrl                  *string                       `json:"saml_metadata_url,omitempty"`                    // Saml Metadata Url
	SamlRequestedAuthnContextEnabled *bool                         `json:"saml_requested_authn_context_enabled,omitempty"` // Set to 'false' to disable RequestedAuthnContext
	SamlSignatureAlgorithm           SamlSignatureAlgorithmType    `json:"saml_signature_algorithm,omitempty"`             // SAMLSignatureAlgorithm
	SamlSpCertificate                *string                       `json:"saml_sp_certificate,omitempty"`                  // Saml Sp Certificate
	SamlVariant                      SamlVariantType               `json:"saml_variant,omitempty"`                         // SAMLVariant
	ScimEnabled                      *bool                         `json:"scim_enabled,omitempty"`                         // SCIM API enabled
	ScimUrl                          *string                       `json:"scim_url,omitempty"`                             // Scim Url
	State                            AuthenticationMethodStateType `json:"state"`                                          // AuthenticationMethodState
	UpdateTime                       time.Time                     `json:"update_time"`                                    // Update Time
}
type AuthenticationMethodStateType string

const (
	AuthenticationMethodStateTypeActive               AuthenticationMethodStateType = "active"
	AuthenticationMethodStateTypeDeleted              AuthenticationMethodStateType = "deleted"
	AuthenticationMethodStateTypePendingConfiguration AuthenticationMethodStateType = "pending_configuration"
)

func AuthenticationMethodStateTypeChoices() []string {
	return []string{"active", "deleted", "pending_configuration"}
}

type AuthenticationMethodType string

const (
	AuthenticationMethodTypeInternal AuthenticationMethodType = "internal"
	AuthenticationMethodTypeSaml     AuthenticationMethodType = "saml"
)

func AuthenticationMethodTypeChoices() []string {
	return []string{"internal", "saml"}
}

type LinkedDomainIn struct {
	DomainId string `json:"domain_id"` // Domain ID
}
type SamlCertType string

const (
	SamlCertTypeAdfs SamlCertType = "adfs"
)

func SamlCertTypeChoices() []string {
	return []string{"adfs"}
}

type SamlDigestAlgorithmType string

const (
	SamlDigestAlgorithmTypeSha1   SamlDigestAlgorithmType = "sha1"
	SamlDigestAlgorithmTypeSha256 SamlDigestAlgorithmType = "sha256"
	SamlDigestAlgorithmTypeSha384 SamlDigestAlgorithmType = "sha384"
	SamlDigestAlgorithmTypeSha512 SamlDigestAlgorithmType = "sha512"
)

func SamlDigestAlgorithmTypeChoices() []string {
	return []string{"sha1", "sha256", "sha384", "sha512"}
}

// SamlFieldMappingIn SAMLFieldMapping
type SamlFieldMappingIn struct {
	Email     *string `json:"email,omitempty"`      // Field name for user email
	FirstName *string `json:"first_name,omitempty"` // Field name for user's first name
	Identity  *string `json:"identity,omitempty"`   // Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user ID) is highly recommended, as email address may change, requiring relinking user to Aiven user.
	LastName  *string `json:"last_name,omitempty"`  // Field name for user's lastname
	RealName  *string `json:"real_name,omitempty"`  // Field name for user's full name. If specified, first_name and last_name mappings are ignored
}

// SamlFieldMappingOut SAMLFieldMapping
type SamlFieldMappingOut struct {
	Email     *string `json:"email,omitempty"`      // Field name for user email
	FirstName *string `json:"first_name,omitempty"` // Field name for user's first name
	Identity  *string `json:"identity,omitempty"`   // Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user ID) is highly recommended, as email address may change, requiring relinking user to Aiven user.
	LastName  *string `json:"last_name,omitempty"`  // Field name for user's lastname
	RealName  *string `json:"real_name,omitempty"`  // Field name for user's full name. If specified, first_name and last_name mappings are ignored
}
type SamlSignatureAlgorithmType string

const (
	SamlSignatureAlgorithmTypeRsaSha1   SamlSignatureAlgorithmType = "rsa-sha1"
	SamlSignatureAlgorithmTypeDsaSha1   SamlSignatureAlgorithmType = "dsa-sha1"
	SamlSignatureAlgorithmTypeRsaSha256 SamlSignatureAlgorithmType = "rsa-sha256"
	SamlSignatureAlgorithmTypeRsaSha384 SamlSignatureAlgorithmType = "rsa-sha384"
	SamlSignatureAlgorithmTypeRsaSha512 SamlSignatureAlgorithmType = "rsa-sha512"
)

func SamlSignatureAlgorithmTypeChoices() []string {
	return []string{"rsa-sha1", "dsa-sha1", "rsa-sha256", "rsa-sha384", "rsa-sha512"}
}

type SamlVariantType string

const (
	SamlVariantTypeAdfs SamlVariantType = "adfs"
)

func SamlVariantTypeChoices() []string {
	return []string{"adfs"}
}

// accountAuthenticationMethodCreateOut AccountAuthenticationMethodCreateResponse
type accountAuthenticationMethodCreateOut struct {
	AuthenticationMethod AccountAuthenticationMethodCreateOut `json:"authentication_method"` // AuthenticationMethod
}

// accountAuthenticationMethodGetOut AccountAuthenticationMethodGetResponse
type accountAuthenticationMethodGetOut struct {
	AuthenticationMethod AccountAuthenticationMethodGetOut `json:"authentication_method"` // AuthenticationMethod
}

// accountAuthenticationMethodUpdateOut AccountAuthenticationMethodUpdateResponse
type accountAuthenticationMethodUpdateOut struct {
	AuthenticationMethod AccountAuthenticationMethodUpdateOut `json:"authentication_method"` // AuthenticationMethod
}

// accountAuthenticationMethodsListOut AccountAuthenticationMethodsListResponse
type accountAuthenticationMethodsListOut struct {
	AuthenticationMethods []AuthenticationMethodOut `json:"authentication_methods"` // Authentication Methods
}
