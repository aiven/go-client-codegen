// Code generated by Aiven. DO NOT EDIT.

package accountteammember

import (
	"context"
	"encoding/json"
	"fmt"
	"net/url"
)

type Handler interface {
	// AccountTeamMemberVerifyInvite confirm account team invite
	// POST /v1/account/{account_id}/invite/{invite_verification_code}
	// https://api.aiven.io/doc/#tag/Account/operation/AccountTeamMemberVerifyInvite
	AccountTeamMemberVerifyInvite(ctx context.Context, accountId string, inviteVerificationCode string) (*AccountTeamMemberVerifyInviteOut, error)
}

func NewHandler(doer doer) AccountTeamMemberHandler {
	return AccountTeamMemberHandler{doer}
}

type doer interface {
	Do(ctx context.Context, operationID, method, path string, v any) ([]byte, error)
}

type AccountTeamMemberHandler struct {
	doer doer
}

func (h *AccountTeamMemberHandler) AccountTeamMemberVerifyInvite(ctx context.Context, accountId string, inviteVerificationCode string) (*AccountTeamMemberVerifyInviteOut, error) {
	path := fmt.Sprintf("/v1/account/%s/invite/%s", url.PathEscape(accountId), url.PathEscape(inviteVerificationCode))
	b, err := h.doer.Do(ctx, "AccountTeamMemberVerifyInvite", "POST", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(accountTeamMemberVerifyInviteOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return &out.InviteDetails, nil
}

// AccountTeamMemberVerifyInviteOut Details of verified invite
type AccountTeamMemberVerifyInviteOut struct {
	UserEmail string `json:"user_email"` // User email address
}

// accountTeamMemberVerifyInviteOut AccountTeamMemberVerifyInviteResponse
type accountTeamMemberVerifyInviteOut struct {
	InviteDetails AccountTeamMemberVerifyInviteOut `json:"invite_details"` // Details of verified invite
}
