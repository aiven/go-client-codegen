// Code generated by Aiven. DO NOT EDIT.

package flinkjarapplicationdeployment

import (
	"context"
	"encoding/json"
	"fmt"
	"net/url"
	"time"
)

type Handler interface {
	// ServiceFlinkCancelJarApplicationDeployment [EXPERIMENTAL] Cancel a JarApplicationDeployment
	// POST /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment/{deployment_id}/cancel
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkCancelJarApplicationDeployment
	ServiceFlinkCancelJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkCancelJarApplicationDeploymentOut, error)

	// ServiceFlinkCreateJarApplicationDeployment [EXPERIMENTAL] Create an JarApplicationDeployment
	// POST /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkCreateJarApplicationDeployment
	ServiceFlinkCreateJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, in *ServiceFlinkCreateJarApplicationDeploymentIn) (*ServiceFlinkCreateJarApplicationDeploymentOut, error)

	// ServiceFlinkDeleteJarApplicationDeployment [EXPERIMENTAL] Delete a JarApplicationDeployment
	// DELETE /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment/{deployment_id}
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkDeleteJarApplicationDeployment
	ServiceFlinkDeleteJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkDeleteJarApplicationDeploymentOut, error)

	// ServiceFlinkGetJarApplicationDeployment [EXPERIMENTAL] Get a JarApplicationDeployment
	// GET /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment/{deployment_id}
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkGetJarApplicationDeployment
	ServiceFlinkGetJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkGetJarApplicationDeploymentOut, error)

	// ServiceFlinkListJarApplicationDeployments [EXPERIMENTAL] Get all JarApplicationDeployments
	// GET /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkListJarApplicationDeployments
	ServiceFlinkListJarApplicationDeployments(ctx context.Context, project string, serviceName string, applicationId string) ([]DeploymentOut, error)

	// ServiceFlinkStopJarApplicationDeployment [EXPERIMENTAL] Stop an JarApplicationDeployment
	// POST /v1/project/{project}/service/{service_name}/flink/jar_application/{application_id}/deployment/{deployment_id}/stop
	// https://api.aiven.io/doc/#tag/Service:_Flink/operation/ServiceFlinkStopJarApplicationDeployment
	ServiceFlinkStopJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkStopJarApplicationDeploymentOut, error)
}

// doer http client
type doer interface {
	Do(ctx context.Context, operationID, method, path string, in any, query ...[2]string) ([]byte, error)
}

func NewHandler(doer doer) FlinkJarApplicationDeploymentHandler {
	return FlinkJarApplicationDeploymentHandler{doer}
}

type FlinkJarApplicationDeploymentHandler struct {
	doer doer
}

func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkCancelJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkCancelJarApplicationDeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment/%s/cancel", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId), url.PathEscape(deploymentId))
	b, err := h.doer.Do(ctx, "ServiceFlinkCancelJarApplicationDeployment", "POST", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(ServiceFlinkCancelJarApplicationDeploymentOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkCreateJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, in *ServiceFlinkCreateJarApplicationDeploymentIn) (*ServiceFlinkCreateJarApplicationDeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId))
	b, err := h.doer.Do(ctx, "ServiceFlinkCreateJarApplicationDeployment", "POST", path, in)
	if err != nil {
		return nil, err
	}
	out := new(ServiceFlinkCreateJarApplicationDeploymentOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkDeleteJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkDeleteJarApplicationDeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment/%s", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId), url.PathEscape(deploymentId))
	b, err := h.doer.Do(ctx, "ServiceFlinkDeleteJarApplicationDeployment", "DELETE", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(ServiceFlinkDeleteJarApplicationDeploymentOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkGetJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkGetJarApplicationDeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment/%s", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId), url.PathEscape(deploymentId))
	b, err := h.doer.Do(ctx, "ServiceFlinkGetJarApplicationDeployment", "GET", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(ServiceFlinkGetJarApplicationDeploymentOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkListJarApplicationDeployments(ctx context.Context, project string, serviceName string, applicationId string) ([]DeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId))
	b, err := h.doer.Do(ctx, "ServiceFlinkListJarApplicationDeployments", "GET", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(serviceFlinkListJarApplicationDeploymentsOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out.Deployments, nil
}
func (h *FlinkJarApplicationDeploymentHandler) ServiceFlinkStopJarApplicationDeployment(ctx context.Context, project string, serviceName string, applicationId string, deploymentId string) (*ServiceFlinkStopJarApplicationDeploymentOut, error) {
	path := fmt.Sprintf("/v1/project/%s/service/%s/flink/jar_application/%s/deployment/%s/stop", url.PathEscape(project), url.PathEscape(serviceName), url.PathEscape(applicationId), url.PathEscape(deploymentId))
	b, err := h.doer.Do(ctx, "ServiceFlinkStopJarApplicationDeployment", "POST", path, nil)
	if err != nil {
		return nil, err
	}
	out := new(ServiceFlinkStopJarApplicationDeploymentOut)
	err = json.Unmarshal(b, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DeploymentOut struct {
	CreatedAt         time.Time            `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string               `json:"created_by"`                   // The creator of this entity
	EntryClass        *string              `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string              `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string               `json:"id"`                           // Deployment ID
	JobId             *string              `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string              `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                  `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string             `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string              `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            DeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string               `json:"version_id"`                   // ApplicationVersion ID
}
type DeploymentStatusType string

const (
	DeploymentStatusTypeCanceled               DeploymentStatusType = "CANCELED"
	DeploymentStatusTypeCancelling             DeploymentStatusType = "CANCELLING"
	DeploymentStatusTypeCancellingRequested    DeploymentStatusType = "CANCELLING_REQUESTED"
	DeploymentStatusTypeCreated                DeploymentStatusType = "CREATED"
	DeploymentStatusTypeDeleteRequested        DeploymentStatusType = "DELETE_REQUESTED"
	DeploymentStatusTypeDeleting               DeploymentStatusType = "DELETING"
	DeploymentStatusTypeFailed                 DeploymentStatusType = "FAILED"
	DeploymentStatusTypeFailing                DeploymentStatusType = "FAILING"
	DeploymentStatusTypeFinished               DeploymentStatusType = "FINISHED"
	DeploymentStatusTypeInitializing           DeploymentStatusType = "INITIALIZING"
	DeploymentStatusTypeReconciling            DeploymentStatusType = "RECONCILING"
	DeploymentStatusTypeRestarting             DeploymentStatusType = "RESTARTING"
	DeploymentStatusTypeRunning                DeploymentStatusType = "RUNNING"
	DeploymentStatusTypeSaving                 DeploymentStatusType = "SAVING"
	DeploymentStatusTypeSavingAndStop          DeploymentStatusType = "SAVING_AND_STOP"
	DeploymentStatusTypeSavingAndStopRequested DeploymentStatusType = "SAVING_AND_STOP_REQUESTED"
	DeploymentStatusTypeSuspended              DeploymentStatusType = "SUSPENDED"
)

func DeploymentStatusTypeChoices() []string {
	return []string{"CANCELED", "CANCELLING", "CANCELLING_REQUESTED", "CREATED", "DELETE_REQUESTED", "DELETING", "FAILED", "FAILING", "FINISHED", "INITIALIZING", "RECONCILING", "RESTARTING", "RUNNING", "SAVING", "SAVING_AND_STOP", "SAVING_AND_STOP_REQUESTED", "SUSPENDED"}
}

// ServiceFlinkCancelJarApplicationDeploymentOut ServiceFlinkCancelJarApplicationDeploymentResponse
type ServiceFlinkCancelJarApplicationDeploymentOut struct {
	CreatedAt         time.Time                                      `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string                                         `json:"created_by"`                   // The creator of this entity
	EntryClass        *string                                        `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string                                        `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string                                         `json:"id"`                           // Deployment ID
	JobId             *string                                        `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string                                        `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                                            `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string                                       `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string                                        `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            ServiceFlinkJarApplicationDeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string                                         `json:"version_id"`                   // ApplicationVersion ID
}

// ServiceFlinkCreateJarApplicationDeploymentIn ServiceFlinkCreateJarApplicationDeploymentRequestBody
type ServiceFlinkCreateJarApplicationDeploymentIn struct {
	EntryClass        *string   `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	Parallelism       *int      `json:"parallelism,omitempty"`        // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       *[]string `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	RestartEnabled    *bool     `json:"restart_enabled,omitempty"`    // Specifies whether a Flink Job is restarted in case it fails
	StartingSavepoint *string   `json:"starting_savepoint,omitempty"` // Job savepoint
	VersionId         string    `json:"version_id"`                   // ApplicationVersion ID
}

// ServiceFlinkCreateJarApplicationDeploymentOut ServiceFlinkCreateJarApplicationDeploymentResponse
type ServiceFlinkCreateJarApplicationDeploymentOut struct {
	CreatedAt         time.Time                                      `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string                                         `json:"created_by"`                   // The creator of this entity
	EntryClass        *string                                        `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string                                        `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string                                         `json:"id"`                           // Deployment ID
	JobId             *string                                        `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string                                        `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                                            `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string                                       `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string                                        `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            ServiceFlinkJarApplicationDeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string                                         `json:"version_id"`                   // ApplicationVersion ID
}

// ServiceFlinkDeleteJarApplicationDeploymentOut ServiceFlinkDeleteJarApplicationDeploymentResponse
type ServiceFlinkDeleteJarApplicationDeploymentOut struct {
	CreatedAt         time.Time                                      `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string                                         `json:"created_by"`                   // The creator of this entity
	EntryClass        *string                                        `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string                                        `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string                                         `json:"id"`                           // Deployment ID
	JobId             *string                                        `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string                                        `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                                            `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string                                       `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string                                        `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            ServiceFlinkJarApplicationDeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string                                         `json:"version_id"`                   // ApplicationVersion ID
}

// ServiceFlinkGetJarApplicationDeploymentOut ServiceFlinkGetJarApplicationDeploymentResponse
type ServiceFlinkGetJarApplicationDeploymentOut struct {
	CreatedAt         time.Time                                      `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string                                         `json:"created_by"`                   // The creator of this entity
	EntryClass        *string                                        `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string                                        `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string                                         `json:"id"`                           // Deployment ID
	JobId             *string                                        `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string                                        `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                                            `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string                                       `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string                                        `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            ServiceFlinkJarApplicationDeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string                                         `json:"version_id"`                   // ApplicationVersion ID
}
type ServiceFlinkJarApplicationDeploymentStatusType string

const (
	ServiceFlinkJarApplicationDeploymentStatusTypeCanceled               ServiceFlinkJarApplicationDeploymentStatusType = "CANCELED"
	ServiceFlinkJarApplicationDeploymentStatusTypeCancelling             ServiceFlinkJarApplicationDeploymentStatusType = "CANCELLING"
	ServiceFlinkJarApplicationDeploymentStatusTypeCancellingRequested    ServiceFlinkJarApplicationDeploymentStatusType = "CANCELLING_REQUESTED"
	ServiceFlinkJarApplicationDeploymentStatusTypeCreated                ServiceFlinkJarApplicationDeploymentStatusType = "CREATED"
	ServiceFlinkJarApplicationDeploymentStatusTypeDeleteRequested        ServiceFlinkJarApplicationDeploymentStatusType = "DELETE_REQUESTED"
	ServiceFlinkJarApplicationDeploymentStatusTypeDeleting               ServiceFlinkJarApplicationDeploymentStatusType = "DELETING"
	ServiceFlinkJarApplicationDeploymentStatusTypeFailed                 ServiceFlinkJarApplicationDeploymentStatusType = "FAILED"
	ServiceFlinkJarApplicationDeploymentStatusTypeFailing                ServiceFlinkJarApplicationDeploymentStatusType = "FAILING"
	ServiceFlinkJarApplicationDeploymentStatusTypeFinished               ServiceFlinkJarApplicationDeploymentStatusType = "FINISHED"
	ServiceFlinkJarApplicationDeploymentStatusTypeInitializing           ServiceFlinkJarApplicationDeploymentStatusType = "INITIALIZING"
	ServiceFlinkJarApplicationDeploymentStatusTypeReconciling            ServiceFlinkJarApplicationDeploymentStatusType = "RECONCILING"
	ServiceFlinkJarApplicationDeploymentStatusTypeRestarting             ServiceFlinkJarApplicationDeploymentStatusType = "RESTARTING"
	ServiceFlinkJarApplicationDeploymentStatusTypeRunning                ServiceFlinkJarApplicationDeploymentStatusType = "RUNNING"
	ServiceFlinkJarApplicationDeploymentStatusTypeSaving                 ServiceFlinkJarApplicationDeploymentStatusType = "SAVING"
	ServiceFlinkJarApplicationDeploymentStatusTypeSavingAndStop          ServiceFlinkJarApplicationDeploymentStatusType = "SAVING_AND_STOP"
	ServiceFlinkJarApplicationDeploymentStatusTypeSavingAndStopRequested ServiceFlinkJarApplicationDeploymentStatusType = "SAVING_AND_STOP_REQUESTED"
	ServiceFlinkJarApplicationDeploymentStatusTypeSuspended              ServiceFlinkJarApplicationDeploymentStatusType = "SUSPENDED"
)

func ServiceFlinkJarApplicationDeploymentStatusTypeChoices() []string {
	return []string{"CANCELED", "CANCELLING", "CANCELLING_REQUESTED", "CREATED", "DELETE_REQUESTED", "DELETING", "FAILED", "FAILING", "FINISHED", "INITIALIZING", "RECONCILING", "RESTARTING", "RUNNING", "SAVING", "SAVING_AND_STOP", "SAVING_AND_STOP_REQUESTED", "SUSPENDED"}
}

// ServiceFlinkStopJarApplicationDeploymentOut ServiceFlinkStopJarApplicationDeploymentResponse
type ServiceFlinkStopJarApplicationDeploymentOut struct {
	CreatedAt         time.Time                                      `json:"created_at"`                   // The creation timestamp of this entity in ISO 8601 format, always in UTC
	CreatedBy         string                                         `json:"created_by"`                   // The creator of this entity
	EntryClass        *string                                        `json:"entry_class,omitempty"`        // The fully qualified name of the entry class to pass during Flink job submission through the entryClass parameter
	ErrorMsg          *string                                        `json:"error_msg,omitempty"`          // Error message describing what caused deployment to fail
	Id                string                                         `json:"id"`                           // Deployment ID
	JobId             *string                                        `json:"job_id,omitempty"`             // Job ID
	LastSavepoint     *string                                        `json:"last_savepoint,omitempty"`     // Job savepoint
	Parallelism       int                                            `json:"parallelism"`                  // Reading of Flink parallel execution documentation is recommended before setting this value to other than 1. Please do not set this value higher than (total number of nodes x number_of_task_slots), or every new job created will fail.
	ProgramArgs       []string                                       `json:"program_args,omitempty"`       // Arguments to pass during Flink job submission through the programArgsList parameter
	StartingSavepoint *string                                        `json:"starting_savepoint,omitempty"` // Job savepoint
	Status            ServiceFlinkJarApplicationDeploymentStatusType `json:"status"`                       // Deployment status
	VersionId         string                                         `json:"version_id"`                   // ApplicationVersion ID
}

// serviceFlinkListJarApplicationDeploymentsOut ServiceFlinkListJarApplicationDeploymentsResponse
type serviceFlinkListJarApplicationDeploymentsOut struct {
	Deployments []DeploymentOut `json:"deployments"` // Flink JarApplicationDeployments
}
